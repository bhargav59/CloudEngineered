# Generated by Django 4.2.24 on 2025-10-03 13:28

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tools", "0006_tool_api_available_tool_api_documentation_url_and_more"),
        ("content", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AffiliateNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("website", models.URLField()),
                ("api_key", models.CharField(blank=True, max_length=255)),
                ("api_secret", models.CharField(blank=True, max_length=255)),
                ("cookie_duration_days", models.IntegerField(default=30)),
                (
                    "commission_structure",
                    models.JSONField(
                        default=dict, help_text="Commission rates structure"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AffiliateProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("program_name", models.CharField(max_length=200)),
                ("program_id", models.CharField(blank=True, max_length=100)),
                (
                    "commission_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage"),
                            ("fixed", "Fixed Amount"),
                            ("tiered", "Tiered"),
                            ("hybrid", "Hybrid"),
                        ],
                        default="percentage",
                        max_length=20,
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percentage or fixed amount",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "commission_tiers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="For tiered commission structures",
                    ),
                ),
                ("cookie_duration_days", models.IntegerField(default=30)),
                (
                    "average_conversion_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "average_commission_per_sale",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("terms_url", models.URLField(blank=True)),
                (
                    "payout_threshold",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("50.00"), max_digits=10
                    ),
                ),
                (
                    "payout_frequency",
                    models.CharField(default="monthly", max_length=50),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "network",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="monetization.affiliatenetwork",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affiliate_programs",
                        to="tools.tool",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_active", "program_name"],
                "unique_together": {("tool", "network")},
            },
        ),
        migrations.CreateModel(
            name="PremiumTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("price_monthly", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "price_yearly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "discount_percentage",
                    models.IntegerField(
                        default=0, help_text="Annual discount percentage"
                    ),
                ),
                (
                    "features",
                    models.JSONField(
                        default=list, help_text="List of features included"
                    ),
                ),
                (
                    "limits",
                    models.JSONField(
                        default=dict,
                        help_text="Feature limits (API calls, downloads, etc.)",
                    ),
                ),
                (
                    "access_level",
                    models.IntegerField(default=1, help_text="Higher = more access"),
                ),
                ("max_team_members", models.IntegerField(default=1)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.IntegerField(default=0)),
                (
                    "badge_text",
                    models.CharField(
                        blank=True, help_text="E.g., 'Most Popular'", max_length=50
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["sort_order", "price_monthly"],
            },
        ),
        migrations.CreateModel(
            name="AffiliateLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Link"),
                            ("button", "Button"),
                            ("banner", "Banner"),
                            ("widget", "Widget"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "placement",
                    models.CharField(
                        choices=[
                            ("review_header", "Review Header"),
                            ("review_body", "Review Body"),
                            ("review_footer", "Review Footer"),
                            ("sidebar", "Sidebar"),
                            ("comparison_table", "Comparison Table"),
                            ("cta_button", "CTA Button"),
                        ],
                        default="review_body",
                        max_length=50,
                    ),
                ),
                ("destination_url", models.URLField(help_text="Original product URL")),
                ("tracking_url", models.URLField(help_text="Affiliate tracking URL")),
                (
                    "short_url",
                    models.CharField(
                        blank=True,
                        help_text="Shortened URL for cleaner display",
                        max_length=200,
                    ),
                ),
                ("tracking_id", models.CharField(blank=True, max_length=100)),
                ("campaign_name", models.CharField(blank=True, max_length=100)),
                (
                    "utm_source",
                    models.CharField(default="cloudengineered", max_length=50),
                ),
                ("utm_medium", models.CharField(default="affiliate", max_length=50)),
                ("utm_campaign", models.CharField(blank=True, max_length=100)),
                ("custom_parameters", models.JSONField(blank=True, default=dict)),
                ("clicks", models.IntegerField(default=0)),
                ("conversions", models.IntegerField(default=0)),
                (
                    "revenue_generated",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "variant",
                    models.CharField(
                        default="A", help_text="A/B test variant", max_length=10
                    ),
                ),
                ("is_control", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_nofollow",
                    models.BooleanField(
                        default=True, help_text="Add nofollow attribute"
                    ),
                ),
                (
                    "is_sponsored",
                    models.BooleanField(
                        default=True, help_text="Add sponsored attribute"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_clicked", models.DateTimeField(blank=True, null=True)),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="monetization.affiliateprogram",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affiliate_links",
                        to="tools.tool",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SponsoredContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sponsor_name", models.CharField(max_length=200)),
                ("sponsor_contact_email", models.EmailField(max_length=254)),
                ("sponsor_company", models.CharField(blank=True, max_length=200)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("review", "Sponsored Review"),
                            ("comparison", "Sponsored Comparison"),
                            ("featured", "Featured Placement"),
                            ("banner", "Banner Ad"),
                            ("newsletter", "Newsletter Sponsorship"),
                            ("webinar", "Webinar Sponsorship"),
                        ],
                        default="featured",
                        max_length=50,
                    ),
                ),
                (
                    "placement",
                    models.CharField(
                        choices=[
                            ("homepage_hero", "Homepage Hero"),
                            ("sidebar", "Sidebar"),
                            ("article_top", "Article Top"),
                            ("article_inline", "Article Inline"),
                            ("comparison_featured", "Comparison Featured"),
                            ("newsletter", "Newsletter"),
                        ],
                        default="sidebar",
                        max_length=50,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "billing_frequency",
                    models.CharField(default="one-time", max_length=20),
                ),
                ("campaign_start", models.DateTimeField()),
                ("campaign_end", models.DateTimeField()),
                ("impressions_target", models.IntegerField(default=0)),
                ("clicks_target", models.IntegerField(default=0)),
                ("impressions", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("conversions", models.IntegerField(default=0)),
                (
                    "disclosure_text",
                    models.TextField(
                        default="This content is sponsored by {sponsor}",
                        help_text="Disclosure text for sponsored content",
                    ),
                ),
                (
                    "custom_content",
                    models.JSONField(
                        blank=True, default=dict, help_text="Custom content blocks"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("contract_reference", models.CharField(blank=True, max_length=100)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="content.article",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sponsored_content",
                        to="tools.tool",
                    ),
                ),
            ],
            options={
                "ordering": ["-campaign_start"],
                "indexes": [
                    models.Index(
                        fields=["status", "campaign_start"],
                        name="monetizatio_status_d528e2_idx",
                    ),
                    models.Index(
                        fields=["tool", "status"], name="monetizatio_tool_id_c8e3e1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PremiumSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("canceled", "Canceled"),
                            ("expired", "Expired"),
                            ("suspended", "Suspended"),
                            ("trial", "Trial"),
                        ],
                        default="trial",
                        max_length=20,
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[("monthly", "Monthly"), ("yearly", "Yearly")],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("trial_end_date", models.DateTimeField(blank=True, null=True)),
                ("next_billing_date", models.DateTimeField(blank=True, null=True)),
                ("canceled_at", models.DateTimeField(blank=True, null=True)),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=100),
                ),
                ("stripe_customer_id", models.CharField(blank=True, max_length=100)),
                ("payment_method", models.CharField(blank=True, max_length=50)),
                ("auto_renew", models.BooleanField(default=True)),
                ("cancel_at_period_end", models.BooleanField(default=False)),
                ("referral_code", models.CharField(blank=True, max_length=50)),
                ("discount_code", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="monetization.premiumtier",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="premium_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "status"], name="monetizatio_user_id_2178b2_idx"
                    ),
                    models.Index(
                        fields=["stripe_subscription_id"],
                        name="monetizatio_stripe__854882_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Commission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transaction_id", models.CharField(max_length=100, unique=True)),
                ("transaction_date", models.DateTimeField()),
                ("order_value", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "commission_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("paid", "Paid"),
                            ("rejected", "Rejected"),
                            ("reversed", "Reversed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("payout_date", models.DateField(blank=True, null=True)),
                ("payout_method", models.CharField(blank=True, max_length=50)),
                ("payout_reference", models.CharField(blank=True, max_length=100)),
                ("customer_id", models.CharField(blank=True, max_length=100)),
                ("product_info", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commissions",
                        to="monetization.affiliatelink",
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commissions",
                        to="monetization.affiliateprogram",
                    ),
                ),
            ],
            options={
                "ordering": ["-transaction_date"],
                "indexes": [
                    models.Index(
                        fields=["status", "transaction_date"],
                        name="monetizatio_status_014a92_idx",
                    ),
                    models.Index(
                        fields=["program", "status"],
                        name="monetizatio_program_08610f_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="affiliatelink",
            index=models.Index(
                fields=["tool", "is_active"], name="monetizatio_tool_id_94f706_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="affiliatelink",
            index=models.Index(
                fields=["tracking_id"], name="monetizatio_trackin_5f40dc_idx"
            ),
        ),
    ]
