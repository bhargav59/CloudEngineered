# ============================================================================
#  CloudEngineered Platform - Environment Configuration
# ============================================================================
# Copy this file to .env and fill in your actual values
# For complete setup instructions, see: COMPLETE_IMPLEMENTATION_GUIDE.md

# ============================================================================
#  REQUIRED SETTINGS
# ============================================================================

# Django Core
DEBUG=True
SECRET_KEY=your-secret-key-here-change-in-production
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Database (SQLite for development, PostgreSQL recommended for production)
DATABASE_URL=sqlite:///db.sqlite3

# AI Services - OpenRouter (REQUIRED for AI features)
# Get your API key from: https://openrouter.ai/keys
# Provides access to 100+ AI models from a single API key
OPENROUTER_API_KEY=sk-or-v1-your-key-here
AI_MOCK_MODE=False  # Set to True for development without API key

# ============================================================================
#  OPTIONAL SETTINGS
# ============================================================================

# GitHub Integration (for repository statistics)
GITHUB_API_TOKEN=ghp_your-token-here

# Site Information
SITE_NAME=CloudEngineered
SITE_DOMAIN=localhost:8000
SITE_DESCRIPTION=Your ultimate resource for cloud engineering and DevOps tool reviews
ENVIRONMENT=development

# ============================================================================
#  PRODUCTION SETTINGS (Only needed for production deployment)
# ============================================================================

# Database (PostgreSQL recommended)
# DATABASE_URL=postgresql://user:password@localhost:5432/cloudengineered
DB_NAME=cloudengineered
DB_USER=postgres
DB_PASSWORD=your-db-password
DB_HOST=localhost
DB_PORT=5432

# Redis (for caching and Celery task queue)
REDIS_URL=redis://localhost:6379/0

# Email (SMTP configuration)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=noreply@cloudengineered.com
EMAIL_HOST_PASSWORD=your-email-password
DEFAULT_FROM_EMAIL=noreply@cloudengineered.com

# Google Analytics 4
# Sign up at: https://analytics.google.com
# Create GA4 property → Get Measurement ID (format: G-XXXXXXXXXX)
# Create API secret: Admin → Data Streams → Measurement Protocol API secrets
GA4_MEASUREMENT_ID=G-XXXXXXXXXX
GA4_API_SECRET=your-ga4-api-secret-here

# Sentry Error Tracking & Performance Monitoring
# Sign up at: https://sentry.io
# Create Django project → Copy DSN
# Format: https://your-key@your-org.ingest.sentry.io/your-project-id
SENTRY_DSN=https://examplePublicKey@o0.ingest.sentry.io/0

# Stripe Payments (for subscriptions)
# Get keys from: https://dashboard.stripe.com/apikeys
STRIPE_PUBLIC_KEY=pk_test_xxxxx
STRIPE_SECRET_KEY=sk_test_xxxxx
STRIPE_WEBHOOK_SECRET=whsec_xxxxx

# AWS S3 (for media file storage)
USE_S3=False
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=cloudengineered-media
AWS_S3_REGION_NAME=us-east-1

# Security (Enable in production)
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SECURE_HSTS_SECONDS=0

# Static & Media Files
STATIC_URL=/static/
STATIC_ROOT=staticfiles/
MEDIA_URL=/media/
MEDIA_ROOT=media/

# Cache Configuration
CACHE_URL=locmem://

# Celery Configuration
CELERY_ALWAYS_EAGER=False  # Set to True to run tasks synchronously in development
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# Development Options
USE_SQLITE=True  # Use SQLite in development, PostgreSQL in production
DISABLE_CACHE=False  # Disable caching for debugging

# ============================================================================
#  NOTES
# ============================================================================
# 
# 1. OPENROUTER_API_KEY is the ONLY required API key for AI features
#    - Provides access to 100+ models (GPT-4, Claude, Llama, Mistral, etc.)
#    - More cost-effective than individual API subscriptions
#    - Sign up at: https://openrouter.ai
#
# 2. Set AI_MOCK_MODE=True for local development without API key
#    - Generates mock content for testing
#    - No API costs during development
#
# 3. For production deployment:
#    - Change DEBUG=False
#    - Use strong SECRET_KEY (generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())")
#    - Configure PostgreSQL database
#    - Set up Redis for caching
#    - Enable SSL security settings
#    - Configure email SMTP
#    - Set up Sentry error tracking
#    - Configure Google Analytics 4
#
# 4. GitHub token is optional but recommended for:
#    - Automatic repository statistics updates
#    - Higher API rate limits (5000/hour vs 60/hour)
#
# 5. Monitoring setup (see MONITORING_SETUP.md):
#    - Sentry: Error tracking and performance monitoring
#    - GA4: User analytics and event tracking
#    - Both have detailed setup instructions in MONITORING_SETUP.md
#
# See COMPLETE_IMPLEMENTATION_GUIDE.md for detailed setup instructions
# ============================================================================
