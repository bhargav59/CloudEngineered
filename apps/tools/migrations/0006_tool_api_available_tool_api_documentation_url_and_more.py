# Generated by Django 4.2.24 on 2025-10-03 13:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tools", "0005_comparisonrequest"),
    ]

    operations = [
        migrations.AddField(
            model_name="tool",
            name="api_available",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="tool",
            name="api_documentation_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="api_rate_limits",
            field=models.JSONField(
                default=dict, help_text="API rate limits and quotas"
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="changelog_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="community_forum_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="community_size",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Estimated community size (users, contributors, forum members)",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="compliance_certifications",
            field=models.JSONField(
                default=list,
                help_text="Compliance certifications: SOC2, GDPR, HIPAA, ISO27001, etc.",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="current_version",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="tool",
            name="demo_url",
            field=models.URLField(blank=True, help_text="Live demo or playground URL"),
        ),
        migrations.AddField(
            model_name="tool",
            name="demo_video_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="discord_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="documentation_quality",
            field=models.CharField(
                choices=[
                    ("excellent", "Excellent"),
                    ("good", "Good"),
                    ("fair", "Fair"),
                    ("poor", "Poor"),
                    ("none", "None"),
                ],
                default="good",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="free_tier_available",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="tool",
            name="free_trial_days",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_closed_issues",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_contributors",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_created_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_latest_release",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_latest_release_date",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_open_issues",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_pull_requests",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_release_count",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_stats_last_updated",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_updated_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="github_watchers",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="performance_metrics",
            field=models.JSONField(
                default=dict,
                help_text="Performance benchmarks: response_time_ms, throughput, uptime_percentage, etc.",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="performance_score",
            field=models.FloatField(
                default=0.0, help_text="Overall performance score (0-100)"
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="pricing_tiers",
            field=models.JSONField(
                default=list,
                help_text="Detailed pricing tiers with features: [{name, price, features, limits}]",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="reddit_subscribers",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="release_frequency",
            field=models.CharField(
                blank=True,
                choices=[
                    ("daily", "Daily"),
                    ("weekly", "Weekly"),
                    ("monthly", "Monthly"),
                    ("quarterly", "Quarterly"),
                    ("biannual", "Twice a Year"),
                    ("annual", "Annually"),
                    ("irregular", "Irregular"),
                ],
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="screenshots",
            field=models.JSONField(
                default=list, help_text="List of screenshot URLs with captions"
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="security_features",
            field=models.JSONField(
                default=list,
                help_text="Security features: encryption, SSO, 2FA, audit logs, etc.",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="slack_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="tool",
            name="stackoverflow_questions",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="tool",
            name="support_channels",
            field=models.JSONField(
                default=list,
                help_text="Available support channels: email, chat, phone, forum, slack, discord, etc.",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="support_email",
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name="tool",
            name="tech_stack",
            field=models.JSONField(
                default=list,
                help_text="Technologies used: languages, frameworks, databases, etc.",
            ),
        ),
        migrations.AddField(
            model_name="tool",
            name="twitter_followers",
            field=models.PositiveIntegerField(default=0),
        ),
    ]
