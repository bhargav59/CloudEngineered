# Generated by Django 4.2.24 on 2025-09-06 16:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tools", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("is_published", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="SEO title (max 60 characters recommended)",
                        max_length=255,
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="SEO description (max 160 characters recommended)",
                        max_length=160,
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True, help_text="Comma-separated keywords", max_length=255
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("rating_sum", models.PositiveIntegerField(default=0)),
                ("rating_count", models.PositiveIntegerField(default=0)),
                ("title", models.CharField(max_length=200)),
                (
                    "excerpt",
                    models.TextField(
                        help_text="Short description for cards and previews",
                        max_length=300,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "article_type",
                    models.CharField(
                        choices=[
                            ("review", "Tool Review"),
                            ("comparison", "Tool Comparison"),
                            ("guide", "How-to Guide"),
                            ("analysis", "Trend Analysis"),
                            ("news", "Industry News"),
                            ("tutorial", "Tutorial"),
                            ("opinion", "Opinion"),
                        ],
                        default="review",
                        max_length=20,
                    ),
                ),
                (
                    "author_name",
                    models.CharField(
                        blank=True,
                        help_text="Display name if different from user",
                        max_length=100,
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(blank=True, null=True, upload_to="articles/"),
                ),
                ("featured_image_alt", models.CharField(blank=True, max_length=200)),
                ("tags", models.JSONField(default=list, help_text="Article tags")),
                (
                    "related_tools",
                    models.JSONField(
                        default=list, help_text="List of related tool IDs"
                    ),
                ),
                (
                    "reading_time",
                    models.PositiveIntegerField(
                        default=5, help_text="Estimated reading time in minutes"
                    ),
                ),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("ai_generated", models.BooleanField(default=False)),
                ("ai_provider", models.CharField(blank=True, max_length=50)),
                ("ai_model", models.CharField(blank=True, max_length=100)),
                ("ai_prompt_used", models.TextField(blank=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("include_in_newsletter", models.BooleanField(default=True)),
                ("newsletter_sent", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="articles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="articles",
                        to="tools.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Article",
                "verbose_name_plural": "Articles",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContentTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True, max_length=200)),
                ("color", models.CharField(default="#3B82F6", max_length=7)),
                ("usage_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Content Tag",
                "verbose_name_plural": "Content Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("question", models.CharField(max_length=200)),
                ("answer", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("tools", "Tools"),
                            ("platform", "Platform"),
                            ("subscription", "Subscription"),
                            ("technical", "Technical"),
                        ],
                        default="general",
                        max_length=50,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("sort_order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQs",
                "ordering": ["category", "sort_order", "question"],
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("subject_line", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "newsletter_type",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly Digest"),
                            ("monthly", "Monthly Roundup"),
                            ("special", "Special Edition"),
                            ("announcement", "Announcement"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                (
                    "featured_tools",
                    models.JSONField(
                        default=list, help_text="List of featured tool IDs"
                    ),
                ),
                ("scheduled_date", models.DateTimeField(blank=True, null=True)),
                ("sent_date", models.DateTimeField(blank=True, null=True)),
                ("is_sent", models.BooleanField(default=False)),
                ("recipients_count", models.PositiveIntegerField(default=0)),
                ("open_rate", models.FloatField(default=0.0)),
                ("click_rate", models.FloatField(default=0.0)),
                (
                    "featured_articles",
                    models.ManyToManyField(
                        blank=True, related_name="newsletters", to="content.article"
                    ),
                ),
            ],
            options={
                "verbose_name": "Newsletter",
                "verbose_name_plural": "Newsletters",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.CharField(
                        choices=[("article", "Article"), ("tool", "Tool")],
                        max_length=20,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("content", models.TextField()),
                ("is_approved", models.BooleanField(default=True)),
                ("is_flagged", models.BooleanField(default=False)),
                ("likes_count", models.PositiveIntegerField(default=0)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="content.comment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="content_com_content_91a863_idx",
                    ),
                    models.Index(
                        fields=["is_approved"], name="content_com_is_appr_d679d3_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["article_type", "is_published"],
                name="content_art_article_bb413f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["category", "is_published"],
                name="content_art_categor_5ca450_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["is_featured", "is_published"],
                name="content_art_is_feat_537b9e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["published_at"], name="content_art_publish_09f985_idx"
            ),
        ),
    ]
