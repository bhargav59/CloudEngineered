version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: cloudengineered
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ..:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=cloudengineered
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8000

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ..:/app
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=cloudengineered
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    command: celery -A config worker -l info

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ..:/app
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=cloudengineered
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
      - celery
    command: celery -A config beat -l info

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
