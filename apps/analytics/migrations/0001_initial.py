# Generated by Django 4.2.24 on 2025-09-10 18:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("page_load", "Page Load Time"),
                            ("api_response", "API Response Time"),
                            ("search_performance", "Search Performance"),
                            ("database_query", "Database Query Time"),
                            ("cache_hit_rate", "Cache Hit Rate"),
                            ("error_rate", "Error Rate"),
                            ("uptime", "System Uptime"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("metric_name", models.CharField(max_length=200)),
                ("value", models.DecimalField(decimal_places=6, max_digits=15)),
                ("unit", models.CharField(max_length=20)),
                ("endpoint", models.CharField(blank=True, max_length=500)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("date", models.DateField(db_index=True)),
                ("hour", models.PositiveIntegerField()),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["metric_type", "date"],
                        name="analytics_p_metric__9cb4e5_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "date"],
                        name="analytics_p_endpoin_147751_idx",
                    ),
                    models.Index(
                        fields=["date", "hour"], name="analytics_p_date_2a3edb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateField(db_index=True)),
                ("sessions", models.PositiveIntegerField(default=0)),
                ("page_views", models.PositiveIntegerField(default=0)),
                ("time_on_site", models.PositiveIntegerField(default=0)),
                ("tools_viewed", models.PositiveIntegerField(default=0)),
                ("articles_read", models.PositiveIntegerField(default=0)),
                ("comparisons_made", models.PositiveIntegerField(default=0)),
                ("searches_performed", models.PositiveIntegerField(default=0)),
                ("bookmarks_added", models.PositiveIntegerField(default=0)),
                ("comments_posted", models.PositiveIntegerField(default=0)),
                ("content_shared", models.PositiveIntegerField(default=0)),
                ("ratings_given", models.PositiveIntegerField(default=0)),
                ("premium_features_used", models.PositiveIntegerField(default=0)),
                ("api_calls_made", models.PositiveIntegerField(default=0)),
                ("content_created", models.PositiveIntegerField(default=0)),
                ("content_updated", models.PositiveIntegerField(default=0)),
                ("mobile_sessions", models.PositiveIntegerField(default=0)),
                ("desktop_sessions", models.PositiveIntegerField(default=0)),
                ("tablet_sessions", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="analytics_u_user_id_0f244f_idx"
                    ),
                    models.Index(
                        fields=["date", "page_views"],
                        name="analytics_u_date_feaa1f_idx",
                    ),
                ],
                "unique_together": {("user", "date")},
            },
        ),
        migrations.CreateModel(
            name="SearchMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query", models.CharField(db_index=True, max_length=500)),
                ("normalized_query", models.CharField(db_index=True, max_length=500)),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("search_type", models.CharField(default="general", max_length=50)),
                ("filters_applied", models.JSONField(blank=True, default=dict)),
                ("results_count", models.PositiveIntegerField(default=0)),
                ("results_clicked", models.PositiveIntegerField(default=0)),
                (
                    "first_click_position",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("search_duration", models.PositiveIntegerField(blank=True, null=True)),
                ("refined_search", models.BooleanField(default=False)),
                ("resulted_in_conversion", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["normalized_query", "created_at"],
                        name="analytics_s_normali_ffaa65_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="analytics_s_user_id_01f95a_idx",
                    ),
                    models.Index(
                        fields=["search_type", "created_at"],
                        name="analytics_s_search__7c9566_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("page_url", models.URLField()),
                ("page_title", models.CharField(blank=True, max_length=500)),
                ("page_type", models.CharField(blank=True, max_length=50)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("browser", models.CharField(blank=True, max_length=100)),
                ("os", models.CharField(blank=True, max_length=100)),
                ("time_on_page", models.PositiveIntegerField(blank=True, null=True)),
                ("scroll_depth", models.PositiveIntegerField(blank=True, null=True)),
                ("bounce", models.BooleanField(default=False)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("utm_source", models.CharField(blank=True, max_length=100)),
                ("utm_medium", models.CharField(blank=True, max_length=100)),
                ("utm_campaign", models.CharField(blank=True, max_length=100)),
                ("utm_term", models.CharField(blank=True, max_length=100)),
                ("utm_content", models.CharField(blank=True, max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="analytics_p_user_id_51b4ce_idx",
                    ),
                    models.Index(
                        fields=["session_id", "created_at"],
                        name="analytics_p_session_fd2f03_idx",
                    ),
                    models.Index(
                        fields=["page_type", "created_at"],
                        name="analytics_p_page_ty_90793b_idx",
                    ),
                    models.Index(
                        fields=["country", "created_at"],
                        name="analytics_p_country_f28d6f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ContentMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField()),
                ("date", models.DateField(db_index=True)),
                ("views", models.PositiveIntegerField(default=0)),
                ("unique_views", models.PositiveIntegerField(default=0)),
                ("authenticated_views", models.PositiveIntegerField(default=0)),
                ("anonymous_views", models.PositiveIntegerField(default=0)),
                ("average_time_on_page", models.PositiveIntegerField(default=0)),
                (
                    "bounce_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "scroll_depth_avg",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("shares", models.PositiveIntegerField(default=0)),
                ("bookmarks", models.PositiveIntegerField(default=0)),
                ("comments", models.PositiveIntegerField(default=0)),
                ("ratings", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("conversions", models.PositiveIntegerField(default=0)),
                (
                    "click_through_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("top_countries", models.JSONField(blank=True, default=list)),
                ("top_cities", models.JSONField(blank=True, default=list)),
                ("traffic_sources", models.JSONField(blank=True, default=dict)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id", "date"],
                        name="analytics_c_content_83cde9_idx",
                    ),
                    models.Index(
                        fields=["date", "views"], name="analytics_c_date_37a98a_idx"
                    ),
                ],
                "unique_together": {("content_type", "object_id", "date")},
            },
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("page_view", "Page View"),
                            ("tool_view", "Tool View"),
                            ("article_view", "Article View"),
                            ("comparison_view", "Comparison View"),
                            ("search", "Search"),
                            ("bookmark_add", "Bookmark Added"),
                            ("bookmark_remove", "Bookmark Removed"),
                            ("user_signup", "User Signup"),
                            ("user_login", "User Login"),
                            ("subscription_upgrade", "Subscription Upgrade"),
                            ("subscription_downgrade", "Subscription Downgrade"),
                            ("email_subscribe", "Email Subscribe"),
                            ("tool_rating", "Tool Rating"),
                            ("comment_add", "Comment Added"),
                            ("share_content", "Content Shared"),
                            ("download", "Download"),
                            ("api_call", "API Call"),
                            ("export_data", "Data Export"),
                            ("custom", "Custom Event"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("event_name", models.CharField(blank=True, max_length=200)),
                (
                    "session_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "anonymous_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("page_url", models.URLField(blank=True)),
                ("properties", models.JSONField(blank=True, default=dict)),
                (
                    "value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("duration", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="analytics_a_event_t_64745b_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="analytics_a_user_id_5c8c13_idx",
                    ),
                    models.Index(
                        fields=["session_id", "timestamp"],
                        name="analytics_a_session_b2ebbe_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="analytics_a_content_d0d251_idx",
                    ),
                ],
            },
        ),
    ]
